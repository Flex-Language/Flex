name: Build and Release Flex

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'

jobs:
  build:
    name: Build Flex for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            asset_name: flex-linux
          - os: windows-latest
            asset_name: flex-windows
          - os: macos-latest
            asset_name: flex-macos

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      shell: bash
        
    - name: Build executable with PyInstaller
      run: |
        cd src
        pyinstaller --onefile main.py -n flex
      shell: bash
        
    - name: Upload executable
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.asset_name }}
        path: src/dist/*
        if-no-files-found: error

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Flex ${{ github.ref_name }}
        draft: false
        prerelease: false
        files: |
          flex-linux/*
          flex-windows/*
          flex-macos/*
        body: |
          # Flex Programming Language ${{ github.ref_name }}
          
          Cross-platform executable releases of the Flex programming language.
          
          ## Downloads
          - Windows: flex-windows/flex.exe
          - MacOS: flex-macos/flex
          - Linux: flex-linux/flex
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  nightly:
    name: Create Nightly Build
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Create or Update Nightly Release
      uses: softprops/action-gh-release@v1
      with:
        name: Flex Nightly Build
        tag_name: nightly
        draft: false
        prerelease: true
        files: |
          flex-linux/*
          flex-windows/*
          flex-macos/*
        body: |
          # Flex Programming Language (Nightly Build)
          Latest development build from the main branch.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}