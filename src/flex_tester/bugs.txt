sando2 absolute(rakm a){
    lw a < 0 {
        x = a * (-1)
        rg3 x
    }
    gher{ rg3 a}
}


sando2 do_modulus (rakm b, rakm c) {
    lw c == 0 { etb3("error: division by zero is not allowed")}

    aba = absolute(b) 
    abb = absolute(c)

    lw aba < abb { rg3 b}


    tlma aba >= abb {
        aba =aba - abb
    }
    lw b < 0 {
        x =aba * (-1)
        rg3 x
    }
    gher{ rg3 aba}
}

sando2 test_neg(rakm a){
    return a*-1
}

sando2 test_print(string d){
    print(d)
}

sando2 test_return(int x){
    print(x)
}

etb3("10 %% 3 is {do_modulus(10, 3)}")


etb3("num is {test_neg(-7)}")


int a=78
int b=55
int c=80
string yui="789jjj"
float d=4.3
print(d)

lw a>=b and a>=c{
    print("nsnndkjnsd")
}

varr=67
varr=varr+9
print(varr)

//tmp=x-(x/2)*2
//print(tmp)

list arrr=[-1,2,-3,4,99]
num=4
print(arrr[num]+arrr[num])

//z=x+y
//print(z)
print(do_modulus(6,7))
asd=test_neg(3)
print(asd)

//test=input()
//test=test+1
//print(test)

x="1234"
hj="ujju"
rrr="ijiubiybb"
print(length(yui))
len=length(x+hj+rrr)
print(x+hj)
print(len)

test_return(3+44)

list arr=[1,2,"awerqwe32e",23]
print(length(arr))



